#%RAML 1.0
title: Contrevenants inspection alimentaire API
mediaType: application/json
baseUri: http://127.0.0.1:5000
version: 1

types:
  Contravention:
    type: object
    properties:
      id_poursuite: number
      id_business: number
      date: string
      description: string
      adresse: string
      date_jugement: string
      etablissement: string
      montant: number
      proprietaire: string
      ville: string
      statut: string
      date_statut: string
      categorie: string
    additionalProperties: false
    example: |
      {
        "id_poursuite": 100,
        "id_business": 200,
        "date": "2022-11-05",
        "description": "Personnes affectées à la consommation de produits",
        "adresse": "123 avenue Chemin, Montréal, Québec",
        "date_jugement": "2022-12-05",
        "etablissement": "Nom Établissement",
        "montant": 100,
        "proprietaire": "Nom Proprietaire",
        "ville": "Montréal",
        "statut": "Ouvert",
        "date_statut": "2024-01-02",
        "categorie": "Restaurant"
      }

  Contrevenant:
    type: object
    properties:
      adresse?: string
      etablissement?: string
      proprietaire?: string
      ville?: string
      statut?: string
      date_statut?: string
    additionalProperties: false
    example: |
      {
        "ville": "Laval"
      }

  DateRange:
    type: object
    properties:
      du: string
      au: string

  EtablissementsListe:
    type: array
    items:
      type: object
      properties:
        etablissement: string
        nbr_infractions: number
      additionalProperties: false
    example: |
      [
        {
          "etablissement": "Nom Établissement",
          "nbr_infractions": 5
        },
        {
          "etablissement": "Autre Établissement",
          "nbr_infractions": 3
        }
      ]

  EtablissementsListeXML:
    type: array
    items:
      type: object
      properties:
        etablissement: string
        nbr_infractions: number
      additionalProperties: false
    example: |
      [
        {
          "etablissement": "Nom Établissement",
          "nbr_infractions": 5
        },
        {
          "etablissement": "Autre Établissement",
          "nbr_infractions": 3
        }
      ]
    xml:
      name: etablissements
      wrapped: true

  EtablissementsListeCSV:
    type: string
    example: |
      Etablissement, Nbr_infractions
      Nom Établissement, 5
      Autre Établissement, 3

  DemandeInspection:
    type: object
    properties:
      id: number
      etablissement: string
      adresse: string
      ville: string
      date_visite: string
      nom_client: string
      prenom_client: string
      description: string

    additionalProperties: false
    example: |
      {
        "id_poursuite": 100,
        "id_business": 200,
        "date": "2022-11-05",
        "description": "Personnes affectées à la consommation de produits",
        "adresse": "123 avenue Chemin, Montréal, Québec",
        "date_jugement": "2022-12-05",
        "etablissement": "Nom Établissement",
        "montant": 100,
        "proprietaire": "Nom Proprietaire",
        "ville": "Montréal",
        "statut": "Ouvert",
        "date_statut": "2024-01-02",
        "categorie": "Restaurant"
      }
  user:
    type: object
    properties:
      nom_complet: string
      courriel: string
      choix_etablissements: array
      mdp: string

    additionalProperties: false
    example: |
      {
        "nom_complet": "John Doe",
        "courriel": "john.doe@example.com",
        "choix_etablissements": [6119, 9150],
        "mpd": "mot_de_passe_secret"
      }


/api:
  /contrevenants:
    /start/{date1}:
      /end/{date2}:
        uriParameters:
          date1:
            description: Date de début au format AAAA-MM-DD.
            type: string
          date2:
            description: Date de fin au format AAAA-MM-DD.
            type: string
        get:
          description: Récupère des données en fonction d'une plage de dates spécifiées.
          responses:
            200:
              body:
                application/json:
                  type: Contravention[]
                example: |
                  [
                    {
                      "id_poursuite": 100,
                      "id_business": 200,
                      "date": "2022-11-05",
                      "description": "Personnes affectées à la consommation de produits",
                      "adresse": "123 avenue Chemin, Montréal, Québec",
                      "date_jugement": "2022-12-05",
                      "etablissement": "Nom Établissement",
                      "montant": 100,
                      "proprietaire": "Nom Proprietaire",
                      "ville": "Montréal",
                      "statut": "Ouvert",
                      "date_statut": "2024-01-02",
                      "categorie": "Restaurant"
                    },
                    {
                      "id_poursuite": 300,
                      "id_business": 350,
                      "date": "2020-11-05",
                      "description": "Personnes affectées à la consommation de produits",
                      "adresse": "123 avenue Chemin, Montréal, Québec",
                      "date_jugement": "2020-12-05",
                      "etablissement": "Nom Établissement",
                      "montant": 500,
                      "proprietaire": "Nom Proprietaire",
                      "ville": "Montréal",
                      "statut": "Ouvert",
                      "date_statut": "2024-01-02",
                      "categorie": "Restaurant"
                    }
                  ]
    /{id_business}:
      uriParameters:
        id_business:
          description: L'identifiant unique de l'établissement contrevenant à modifier
          type: integer
      patch:
        description: Modifie partiellement l'établissement contrevenant associé au id spécifié en paramètre, selon les modifications spécifiées.
          body:
            application/json:
              type: ContraventionUpdate
        responses:
          200:
            body:
              application/json:
                type: Contrevenant[]
              example: |
                [
                  {
                    "id_business": 200,
                    "adresse": "123 avenue Chemin, Montréal, Québec",
                  }
                ]
          400:
            description: Une erreur reliée au schéma JSON a été rencontrée.
            body:
              application/json:
              example: |
                {
                  "error": "Error validating against schema",
                  "errors": [
                    "'id_business' is a required property"
                  ]
                }
          404:
            description: Le ou les ids ne correspondent a aucun contrevenant. Aucune modification n'a été apportée.
      delete:
        description: Supprime l'établissement contrevenant associé au id spécifié en paramètre de la base de données.
        responses:
          200:
            description: L'établissement a bien été supprimé de la base de données.
          404:
            description: Le id spécifié en paramètre n'est associé à aucun établissement de la base de données. Aucun contrevenant n'a été supprimé.

  /etablissements:
    get:
      description: Récupère la liste des établissements et on indique le nombre d'infractions connues. La liste est triée en ordre décroissant du nombre d'infractions.
      responses:
        200:
          body:
            application/json:
              type: EtablissementsListe
              example: |
                [
                  {
                    "etablissement": "Nom Établissement",
                    "nbr_infractions": 5
                  },
                  {
                    "etablissement": "Autre Établissement",
                    "nbr_infractions": 3
                  }
    /xml:
      get:
        description: Récupère la liste des établissements et on indique le nombre d'infractions connues. La liste est triée en ordre décroissant du nombre d'infractions et en format XML.
        responses:
          200:
            body:
              application/xml:
                type: EtablissementsListeXML
                example: |
                  <?xml version="1.0" encoding="UTF-8"?>
                  <etablissements>
                      <etablissement>
                          <nom>Nom Établissement</nom>
                          <nbr_infractions>5</nbr_infractions>
                      </etablissement>
                      <etablissement>
                          <nom>Autre Établissement</nom>
                          <nbr_infractions>3</nbr_infractions>
                      </etablissement>
                  </etablissements>
    /csv:
      get:
        description: Récupère la liste des établissements et on indique le nombre d'infractions connues. La liste est triée en ordre décroissant du nombre d'infractions et en format CSV.
        responses:
          200:
            body:
              application/csv:
                type: EtablissementsListeCSV
                example: |
                  Etablissement, Nbr_infractions
                  Nom Établissement, 5
                  Autre Établissement, 3

    /demande-inspection:
      post:
        description: Crée une demande d'inspection à la ville.
        responses:
          201:
            description: La demande d'inspection a bien été créée.
            body:
              application/json:
                type: DemandeInspection
                example: |
                  {
                   "id": 45,
                   "etablissement": Restaurant XYZ,
                   "adresse": "123 rue LeChemin",
                   "ville": "VilleCity",
                   "date_visite": "2022-11-05",
                   "nom_client": "Joe",
                   "prenom_client": "Dane",
                   "Description": "Aliments insalubres",
                  }
          400:
            description: Une erreur reliée au schéma JSON a été rencontrée.
            body:
              application/json:
                example: |
                  {
                    "error": "Error validating against schema",
                    "errors": [
                    "'ville' is a required property",
                    "Additional properties are not allowed ('vlle' was unexpected)"
                    ]
                  }

      delete:
        description: Supprime une demande d'inspection à la ville selon le ID spécifié en paramètre.
        responses:
          200:
            description : La demande d'inspection a bien été supprimée.
          404:
            description : Le ID spécifié ne correspond à aucune demande d'inspection.

  /new-user:
    post:
      description: Crée un nouveau profil d'utilisateur.
      body:
        application/json:
          type: user
          example: |
            {
              "nom_complet": "John Doe",
              "courriel": "john.doe@example.com",
              "choix_etablissements": [6119, 9150],
              "mdp": "mot_de_passe_secret"
            }
    responses:
      201:
        description: Le profil utilisateur a été créé avec succès.
        body:
          application/json:
            example: |
              {
                "message": "Profil utilisateur créé avec succès."
              }
      400:
        description: Les données fournies sont invalides ou manquantes.
        body:
          application/json:
            example: |
              {
                "error": "Données invalides ou manquantes.",
                "details": "Veuillez vérifier les données fournies et réessayer
               ."
              }
